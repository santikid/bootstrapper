name: Build Release Binary

on:
  release:
    types:
      - published

jobs:
  build-macos:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - id: build-aarch64-apple-darwin
        name: build aarch64-apple-darwin
        uses: ./.github/actions/rust-build-target
        with:
          arch: aarch64-apple-darwin

      - id: build-x86_64-apple-darwin
        name: build x86_64-apple-darwin
        uses: ./.github/actions/rust-build-target
        with:
          arch: x86_64-apple-darwin

      - name: copy binaries to release folder
        run: |
          mkdir ./releases
          cp ${{ steps.build-aarch64-apple-darwin.outputs.path }}/bootstrapper ./releases/bootstrapper_darwin_aarch64
          cp ${{ steps.build-x86_64-apple-darwin.outputs.path }}/bootstrapper ./releases/bootstrapper_darwin_amd64

      - name: Release Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: ./releases/*

  build-linux-windows:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
      CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: apt update
        run: sudo apt update

      - name: install rustup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install mingw for windows cross-compilation
        run: sudo apt install mingw-w64 -y

      - name: install aarch64 g++ for linux arm cross-compilation
        run: sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross

      - id: build-x86_64-pc-windows-gnu
        name: build windows x86_64
        uses: ./.github/actions/rust-build-target
        with:
          arch: x86_64-pc-windows-gnu

      - id: build-x86_64-unknown-linux-gnu
        name: build linux x86_64
        uses: ./.github/actions/rust-build-target
        with:
          arch: x86_64-unknown-linux-gnu

      - id: build-aarch64-unknown-linux-gnu
        name: build linux arm64
        uses: ./.github/actions/rust-build-target
        with:
          arch: aarch64-unknown-linux-gnu

      - name: copy binaries to release folder
        run: |
          mkdir -p ./releases
          cp ${{ steps.build-x86_64-pc-windows-gnu.outputs.path }}/bootstrapper.exe ./releases/bootstrapper_windows_amd64.exe
          cp ${{ steps.build-x86_64-unknown-linux-gnu.outputs.path }}/bootstrapper ./releases/bootstrapper_linux_amd64
          cp ${{ steps.build-aarch64-unknown-linux-gnu.outputs.path }}/bootstrapper ./releases/bootstrapper_linux_aarch64

      - name: Release Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: ./releases/*
